{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/home-page/home-page.component.css","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/coruse.model.client.ts","webpack:///./src/app/models/section.model.client.ts","webpack:///./src/app/models/user.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/section-viewer/section-viewer.component.css","webpack:///./src/app/section-viewer/section-viewer.component.html","webpack:///./src/app/section-viewer/section-viewer.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-tabs/topic-tabs.component.css","webpack:///./src/app/topic-tabs/topic-tabs.component.html","webpack:///./src/app/topic-tabs/topic-tabs.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,gCAAgC,4BAA4B,wBAAwB,KAAK,wBAAwB,mBAAmB,KAAK,kBAAkB,wBAAwB,KAAK,K;;;;;;;;;;;ACAxL,0YAA0Y,gCAAgC,6CAA6C,WAAW,yBAAyB,cAAc,2I;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvd;AACoB;AACvB;AAO/C;IAEE,wBAAoB,OAA4B,EAC5B,KAAqB;QADzC,iBAIC;QAJmB,YAAO,GAAP,OAAO,CAAqB;QAC5B,UAAK,GAAL,KAAK,CAAgB;QAKzC,YAAO,GAAG,EAAE,CAAC;QAJX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,gBAAM,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACtC,CAAC;IAKD,oCAAW,GAAX;QAAA,iBAGC;QAFC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;aAC1B,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;IAC7C,CAAC;IAED,kCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,iCAAQ,GAAR;IACA,CAAC;IArBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAG6B,mFAAmB;YACrB,8DAAc;OAH9B,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;;;;;;;;;;;;ACT4B;AACW;AACF;AACT;AACM;AACiB;AACvB;AAC0B;AAEjF,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAC;IAClD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,gFAAiB,EAAC;IAC7C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAC;IAC/C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;IAC3C,EAAE,IAAI,EAAE,gCAAgC,EAAE,SAAS,EAAE,qEAAc,EAAE;IACrE,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,+FAAsB,EAAE;IACvE,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAC9D,EAAE,IAAI,EAAE,mCAAmC,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAC/E,EAAE,IAAI,EAAE,oDAAoD,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAChG,EAAE,IAAI,EAAE,mEAAmE,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAC/G,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,gFAAiB,EAAC,CAAC,OAAO;CACpD,CAAC;AACK,IAAM,OAAO,GAAG,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;ACxBvD,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACf;AACF;AAEM;AACqB;AAC9B;AACoC;AACL;AACH;AACD;AACR;AACM;AACiB;AACN;AACL;AACK;AACL;AACK;AACL;AACE;AACJ;AACV;AACoB;AACN;AACY;AAmCnF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,gFAAiB;gBACjB,sFAAmB;gBACnB,8EAAiB;gBACjB,sEAAc;gBACd,4EAAgB;gBAChB,6FAAqB;gBACrB,uFAAmB;gBACnB,uFAAmB;gBACnB,uFAAmB;gBACnB,oFAAkB;gBAClB,sEAAc;gBACd,0FAAoB;gBACpB,gGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,oDAAO;aACR;YACD,SAAS,EAAE;gBACT,mFAAmB;gBACnB,+EAAiB;gBACjB,oFAAmB;gBACnB,oFAAmB;gBACnB,kFAAkB;gBAClB,oFAAmB;gBACnB,sFAAoB;aACrB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5DtB,yBAAyB,0BAA0B,KAAK,iBAAiB,uBAAuB,KAAK,K;;;;;;;;;;;ACArG,qCAAqC,gBAAgB,0LAA0L,cAAc,yCAAyC,WAAW,qFAAqF,WAAW,oI;;;;;;;;;;;;;;;;;;;;;;;;;ACA/V;AACoB;AAQtE;IAEE,6BAAoB,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;QAEhD,YAAO,GAAa,EAAE,CAAC;IAF6B,CAAC;IAIrD,sCAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;aAC1B,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;IAC7C,CAAC;IATU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAG6B,mFAAmB;OAFrC,mBAAmB,CAW/B;IAAD,0BAAC;CAAA;AAX+B;;;;;;;;;;;;ACThC,mB;;;;;;;;;;;ACAA,2DAA2D,cAAc,2F;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvB;AACH;AACuB;AACjB;AAOrD;IAEE,+BAAoB,OAA4B,EAC5B,KAAqB;QADzC,iBAGC;QAHmB,YAAO,GAAP,OAAO,CAAqB;QAC5B,UAAK,GAAL,KAAK,CAAgB;QAIzC,WAAM,GAAW,IAAI,kEAAM,EAAE,CAAC;QAH5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAnC,CAAmC,CAAC,CAAC;IAC7E,CAAC;IAGD,0CAAU,GAAV,UAAW,QAAQ;QAAnB,iBAGC;QAFC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC;aAClC,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAdU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAG6B,mFAAmB;YACrB,8DAAc;OAH9B,qBAAqB,CAgBjC;IAAD,4BAAC;CAAA;AAhBiC;;;;;;;;;;;;ACVlC,0BAA0B,wBAAwB,KAAK,mBAAmB,wBAAwB,KAAK,eAAe,sBAAsB,KAAK,K;;;;;;;;;;;ACAjJ,6cAA6c,eAAe,4FAA4F,wBAAwB,oIAAoI,cAAc,2CAA2C,WAAW,0J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtuB;AACD;AACiB;AACI;AAEE;AACjC;AAOvC;IAEE,2BAAoB,WAA8B,EAC9B,aAAkC,EAClC,cAAoC,EACpC,MAAc;QAHd,gBAAW,GAAX,WAAW,CAAmB;QAC9B,kBAAa,GAAb,aAAa,CAAqB;QAClC,mBAAc,GAAd,cAAc,CAAsB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAElC,SAAI,GAAG,IAAI,8DAAI,EAAE,CAAC;QAElB,YAAO,GAAa,EAAE,CAAC;QACvB,oBAAe,GAAa,EAAE,CAAC;QAC/B,aAAQ,GAAG,EAAE,CAAC;IANwB,CAAC;IAQvC,oCAAQ,GAAR;QAAA,iBAyBC;QAxBC,IAAI,CAAC,WAAW;aACb,OAAO,EAAE;aACT,IAAI,CAAC,cAAI;YACR,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;gBACvB,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE;qBAChC,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC;qBACvC,IAAI,CAAC;oBACJ,KAAI,CAAC,cAAc;yBAChB,sBAAsB,CAAC,KAAI,CAAC,MAAM,CAAC;yBACnC,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC;yBAC1C,IAAI,CAAC;wBACJ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC7C,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oCAC7D,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC7C,CAAC;4BACH,CAAC;wBACH,CAAC;oBACH,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC,CAAC,CAAC,IAAI,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAC5C,CAAC;IAtCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAGiC,+EAAiB;YACf,mFAAmB;YAClB,qFAAoB;YAC5B,sDAAM;OALvB,iBAAiB,CAwC7B;IAAD,wBAAC;CAAA;AAxC6B;;;;;;;;;;;;ACb9B,gCAAgC,4BAA4B,wBAAwB,KAAK,sBAAsB,mBAAmB,KAAK,K;;;;;;;;;;;ACAvI,sKAAsK,gCAAgC,kCAAkC,UAAU,UAAU,UAAU,UAAU,WAAW,aAAa,cAAc,kE;;;;;;;;;;;;;;;;;;;;;;;;;;ACApQ;AACH;AACuB;AAOtE;IAEE,6BAAoB,OAA4B,EAC5B,KAAqB;QADzC,iBAIC;QAJmB,YAAO,GAAP,OAAO,CAAqB;QAC5B,UAAK,GAAL,KAAK,CAAgB;QAQzC,YAAO,GAAG,EAAE,CAAC;QAPX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,gBAAM,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACtC,CAAC;IAOD,uCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,QAAQ,EAAE,QAAQ;QAA9B,iBAMC;QALC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,QAAQ,EAAE,QAAQ,CAAC;aAClD,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;IAC7C,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IA/BU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAG6B,mFAAmB;YACrB,8DAAc;OAH9B,mBAAmB,CAkC/B;IAAD,0BAAC;CAAA;AAlC+B;;;;;;;;;;;;ACThC,6BAA6B,wBAAwB,KAAK,K;;;;;;;;;;;ACA1D,6f;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AACoB;AAOlE;IAwBE,wBAAoB,MAAc,EACd,OAA0B;QAD1B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAmB;IAAI,CAAC;IArBnD,8BAAK,GAAL,UAAM,QAAQ,EAAE,QAAQ;QAAxB,iBAkBC;QAjBC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,OAAO;iBACT,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC;iBACzB,IAAI,CAAC,kBAAQ;gBACZ,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,IAAI;gBACT,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBACd,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAK,CAAC,sCAAsC,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,2CAA2C,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAKD,iCAAQ,GAAR;IACA,CAAC;IA5BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAyB4B,sDAAM;YACL,+EAAiB;OAzBnC,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B;;;;;;;;;;;;;;ACT3B;AAAA;IAAA;IAGA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACHD;AAAA;IAAA;IAIA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACJD;AAAA;IAAA;IASA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACTD,gCAAgC,4BAA4B,wBAAwB,KAAK,wBAAwB,mBAAmB,KAAK,K;;;;;;;;;;;ACAzI,+KAA+K,gCAAgC,kHAAkH,UAAU,UAAU,WAAW,iBAAiB,cAAc,6H;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7U;AACH;AACuB;AAOtE;IAEE,6BAAoB,OAA4B,EAC5B,KAAqB;QADzC,iBAIC;QAJmB,YAAO,GAAP,OAAO,CAAqB;QAC5B,UAAK,GAAL,KAAK,CAAgB;QAOzC,YAAO,GAAG,EAAE,CAAC;QANX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,gBAAM,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACtC,CAAC;IAMD,uCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAED,yCAAW,GAAX,UAAY,QAAQ;QAApB,iBAIC;QAHC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aACxC,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;IAC7C,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAzBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAG6B,mFAAmB;YACrB,8DAAc;OAH9B,mBAAmB,CA0B/B;IAAD,0BAAC;CAAA;AA1B+B;;;;;;;;;;;;ACThC,2BAA2B,wBAAwB,uBAAuB,0BAA0B,KAAK,eAAe,wBAAwB,uBAAuB,0BAA0B,KAAK,gBAAgB,wBAAwB,uBAAuB,0BAA0B,KAAK,iBAAiB,uBAAuB,0BAA0B,KAAK,K;;;;;;;;;;;ACA3W,m4BAAm4B,wBAAwB,oIAAoI,cAAc,2CAA2C,WAAW,4HAA4H,iBAAiB,+HAA+H,yBAAyB,WAAW,0BAA0B,oBAAoB,kBAAkB,mlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj6C;AACD;AACiB;AAC3B;AACiC;AACF;AAQtE;IAEE,0BAAoB,OAA0B,EAC1B,cAAoC,EACpC,aAAkC,EAClC,MAAc;QAHd,YAAO,GAAP,OAAO,CAAmB;QAC1B,mBAAc,GAAd,cAAc,CAAsB;QACpC,kBAAa,GAAb,aAAa,CAAqB;QAClC,WAAM,GAAN,MAAM,CAAQ;QAElC,aAAa;QACb,SAAI,GAAG,IAAI,8DAAI,EAAE,CAAC;QAElB,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAa,EAAE,CAAC;QACvB,oBAAe,GAAa,EAAE,CAAC;IAPO,CAAC;IASvC,iCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO;aACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,cAAM,YAAK,CAAC,oBAAoB,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAC/D,CAAC;IAED,iCAAM,GAAN;QAAA,iBAMC;QALC,IAAI,CAAC,OAAO;aACT,MAAM,EAAE;aACR,IAAI,CAAC;YACJ,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAA/B,CAA+B,CAAC,CAAC;IAEvC,CAAC;IAED,iCAAM,GAAN;QAAA,iBAKC;QAJC,EAAE,CAAC,CAAC,OAAO,CAAC,iDAAiD,CAAC,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;iBAClB,IAAI,CAAC,cAAM,YAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,8CAAmB,GAAnB;QAAA,iBAmBC;QAlBC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE;aAChC,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC;aACvC,IAAI,CAAC;YACJ,KAAI,CAAC,cAAc;iBAChB,sBAAsB,CAAC,KAAI,CAAC,MAAM,CAAC;iBACnC,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC;iBAC1C,IAAI,CAAC;gBACJ,KAAI,CAAC,eAAe,GAAG,IAAI,KAAK,EAAE,CAAC;gBACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7C,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAC7D,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7C,CAAC;oBACH,CAAC;gBACH,CAAC;gBACD,MAAM,CAAC,KAAI,CAAC,eAAe,CAAC;YAC9B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAQ,GAAR,UAAS,MAAM,EAAE,SAAS;QAA1B,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,CAAC;aACnD,IAAI,CAAC,cAAM,YAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,MAAM,CAAC,EAAlD,CAAkD,CAAC;aAC9D,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC;aAC1C,IAAI,CAAC,cAAM,YAAI,CAAC,mBAAmB,EAAE,EAA1B,CAA0B,CAAC,CAAC;IAC5C,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAuDC;QAtDC,IAAI,CAAC,OAAO;aACT,OAAO,EAAE;aACT,IAAI,CAAC,cAAI;YACR,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,KAAK,CAAC,yBAAyB,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;gBACvB,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE;qBAChC,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC;qBACvC,IAAI,CAAC;oBACJ,KAAI,CAAC,cAAc;yBAChB,sBAAsB,CAAC,KAAI,CAAC,MAAM,CAAC;yBACnC,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC;yBAC1C,IAAI,CAAC;wBACJ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC7C,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oCAC7D,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC7C,CAAC;4BACH,CAAC;wBACH,CAAC;oBACH,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC;qBACD,IAAI,CAAC;oBACN,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QACH,mCAAmC;QACnC,sBAAsB;QACtB,uCAAuC;QACvC,kDAAkD;QAClD,MAAM;QACR,kBAAkB;QAClB,0CAA0C;QAC1C,kDAAkD;QAClD,OAAO;QACP,kBAAkB;QAClB,uDAAuD;QACvD,wDAAwD;QACxD,0EAA0E;QAC1E,wDAAwD;QACxD,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,oBAAoB;QACpB,kCAAkC;QAClC,iCAAiC;QACjC,gCAAgC;QAChC,MAAM;IAER,CAAC;IAtHU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAG6B,+EAAiB;YACV,qFAAoB;YACrB,mFAAmB;YAC1B,sDAAM;OALvB,gBAAgB,CAyH5B;IAAD,uBAAC;CAAA;AAzH4B;;;;;;;;;;;;ACb7B,0BAA0B,wBAAwB,KAAK,K;;;;;;;;;;;ACAvD,2nB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACX;AAC2B;AAOlE;IAEE,2BAAoB,MAAc,EACd,OAA0B;QAD1B,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAmB;IAAI,CAAC;IAKnD,oCAAQ,GAAR,UAAS,QAAQ,EAAE,QAAQ,EAAE,SAAS;QAAtC,iBAqBC;QApBC,EAAE,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC3B,KAAK,CAAC,yBAAyB,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO;qBACT,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC;qBAC9B,IAAI,CAAC,kBAAQ;oBACZ,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACzB,CAAC,CAAC;qBACD,IAAI,CAAC,UAAC,IAAI;oBACT,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;wBACd,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAK,CAAC,0CAA0C,CAAC,CAAC;oBACpD,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAhCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAG4B,sDAAM;YACL,+EAAiB;OAHnC,iBAAiB,CAkC7B;IAAD,wBAAC;CAAA;AAlC6B;;;;;;;;;;;;ACT9B,2BAA2B,wBAAwB,yBAAyB,KAAK,sBAAsB,sBAAsB,KAAK,iBAAiB,0BAA0B,KAAK,a;;;;;;;;;;;ACAlL,ijBAAijB,cAAc,UAAU,eAAe,ghB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtiB;AACK;AACiB;AACjB;AACe;AAOtE;IAEE,8BAAoB,OAA6B,EAC7B,aAAkC,EAClC,MAAc,EACd,KAAqB;QAHzC,iBAQC;QARmB,YAAO,GAAP,OAAO,CAAsB;QAC7B,kBAAa,GAAb,aAAa,CAAqB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAOzC,YAAO,GAAY,IAAI,oEAAO,EAAE,CAAC;QACjC,aAAQ,GAAG,EAAE,CAAC;QAPZ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAAK,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAC7E,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;iBAClD,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,2CAAY,GAAZ,UAAa,QAAQ;QAArB,iBAOC;QANC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO;iBACT,qBAAqB,CAAC,QAAQ,CAAC;iBAC/B,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IAED,4CAAa,GAAb,UAAc,WAAW,EAAE,KAAK;QAAhC,iBAsBC;QArBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3B,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,OAAO;yBACT,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC;yBACvG,IAAI,CAAC;wBACJ,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBAC3C,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,OAAO;yBACT,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC;yBACxD,IAAI,CAAC;wBACJ,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBAC3C,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAK,CAAC,2CAA2C,CAAC,CAAC;YACrD,CAAC;QACL,CAAC;IACH,CAAC;IAED,qCAAM,GAAN,UAAO,OAAO;QAAd,iBAIC;QAHC,IAAI,CAAC,OAAO;aACT,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC;aAC1B,IAAI,CAAC,cAAM,YAAI,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAxC,CAAwC,CAAC,CAAC;IAC1D,CAAC;IAED,qCAAM,GAAN,UAAO,OAAO;QAAd,iBAKC;QAJC,IAAI,CAAC,OAAO;aACT,aAAa,CAAC,OAAO,CAAC;aACtB,IAAI,CAAC,cAAM,YAAI,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAxC,CAAwC,CAAC;aACpD,IAAI,CAAC,cAAM,YAAK,CAAC,qBAAqB,CAAC,EAA5B,CAA4B,CAAC,CAAC;IAC9C,CAAC;IAGD,uCAAQ,GAAR;IACA,CAAC;IAhEU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAG6B,qFAAoB;YACd,mFAAmB;YAC1B,sDAAM;YACP,8DAAc;OAL9B,oBAAoB,CAkEhC;IAAD,2BAAC;CAAA;AAlEgC;;;;;;;;;;;;ACXjC,mB;;;;;;;;;;;ACAA,wEAAwE,cAAc,uJAAuJ,cAAc,UAAU,eAAe,yJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlO;AACsB;AACjB;AACA;AACN;AACiB;AACI;AAOtE;IAEE,gCAAoB,OAA6B,EAC7B,WAA8B,EAC9B,aAAkC,EAClC,MAAc,EACd,KAAqB;QAJzC,iBASC;QATmB,YAAO,GAAP,OAAO,CAAsB;QAC7B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,kBAAa,GAAb,aAAa,CAAqB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAOzC,YAAO,GAAY,IAAI,oEAAO,EAAE,CAAC;QACjC,aAAQ,GAAG,EAAE,CAAC;QACd,SAAI,GAAG,IAAI,8DAAI,EAAE,CAAC;QARhB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAAK,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAC3E,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;iBAClD,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAQD,6CAAY,GAAZ,UAAa,QAAQ;QAArB,iBAMC;QALC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACjC,IAAI;aACD,OAAO;aACP,qBAAqB,CAAC,QAAQ,CAAC;aAC/B,IAAI,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IAChD,CAAC;IAED,sDAAqB,GAArB,UAAsB,OAAO,EAAE,QAAQ;QACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,iDAAiD;YACjD,iBAAiB;YACjB,IAAI;YACJ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,uCAAM,GAAN,UAAO,MAAM,EAAE,OAAO;QAAtB,iBA0BC;QAzBC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC/C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,kBAAgB,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC;iBAC7C,IAAI,CAAC,kBAAQ,IAAI,yBAAgB,GAAG,QAAQ,EAA3B,CAA2B,CAAC;iBAC7C,IAAI,CAAC;gBACJ,EAAE,CAAC,CAAC,KAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,kBAAgB,CAAC,CAAC,CAAC,CAAC;oBAC5D,KAAK,CAAC,iEAAiE,CAAC,CAAC;gBACzE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO;yBACT,sBAAsB,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC;yBAC3C,IAAI,CAAC,UAAC,QAAQ;wBACb,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACzB,CAAC,CAAC;yBACD,IAAI,CAAC,kBAAQ;wBACZ,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;4BACjB,KAAK,CAAC,8BAA8B,CAAC,CAAC;wBACxC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBACpC,CAAC;oBACH,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW;aACb,OAAO,EAAE;aACT,IAAI,CAAC,cAAI;YACR,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IA1EU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAG6B,qFAAoB;YAChB,+EAAiB;YACf,mFAAmB;YAC1B,sDAAM;YACP,8DAAc;OAN9B,sBAAsB,CA4ElC;IAAD,6BAAC;CAAA;AA5EkC;;;;;;;;;;;;;;ACbnC;AAAA;IAAA;QACE,eAAU,GAAG,6DAA6D,CAAC;IAS7E,CAAC;IARC,4CAAc,GAAd;QACE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;aAC1B,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IACD,4CAAc,GAAd,UAAe,QAAQ;QACrB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,QAAQ,CAAC;aAC3C,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACVD;AAAA;IAAA;IAKA,CAAC;IAJC,kDAAoB,GAApB,UAAqB,QAAQ,EAAE,QAAQ;QACrC,MAAM,CAAC,KAAK,CAAC,8DAA8D,GAAG,QAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,SAAS,CAAC;aACxH,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACLD;AAAA;IAAA;QACE,eAAU,GAAG,8EAA8E,CAAC;IAK9F,CAAC;IAJC,kDAAoB,GAApB,UAAqB,QAAQ;QAC3B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;aACzD,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA;IAAA;QAEE,qEAAqE;QACrE,gBAAW,GAAG,4EAA4E,CAAC;IA4D7F,CAAC;IA1DC,qDAAsB,GAAtB,UAAuB,MAAM;QAC3B,IAAM,GAAG,GAAG,6DAA6D,GAAG,MAAM,GAAG,UAAU,CAAC;QAChG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;YAChB,WAAW,EAAE,SAAS;SACvB,CAAC;aACC,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IAED,qDAAsB,GAAtB,UAAuB,MAAM,EAAE,SAAS;QACtC,IAAM,GAAG,GAAG,6DAA6D,GAAG,MAAM,GAAG,WAAW,GAAG,SAAS,CAAC;QAC7G,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;YAChB,MAAM,EAAE,MAAM;YACd,WAAW,EAAE,SAAS;SACvB,CAAC,CAAC;IACL,CAAC;IAED,4CAAa,GAAb,UAAc,SAAS;QACrB,IAAM,GAAG,GAAG,6DAA6D,GAAG,SAAS,CAAC;QACtF,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;YAChB,MAAM,EAAE,QAAQ;SACjB,CAAC,CAAC;IACL,CAAC;IAED,4CAAa,GAAb,UAAc,OAAO;QACnB,MAAM,CAAC,KAAK,CAAC,6DAA6D,GAAG,OAAO,CAAC,GAAG,EAAE;YACxF,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YAC7B,WAAW,EAAE,SAAS;YACtB,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC,CAAC;IACL,CAAC;IAED,8CAAe,GAAf,UAAgB,MAAM,EAAE,SAAS;QAC/B,IAAM,GAAG,GAAG,6DAA6D,GAAG,MAAM,GAAG,WAAW,GAAG,SAAS,CAAC;QAC7G,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE;YAChB,MAAM,EAAE,QAAQ;YAChB,WAAW,EAAE,SAAS;SACvB,CAAC,CAAC;IACL,CAAC;IAED,oDAAqB,GAArB,UAAsB,QAAQ;QAC5B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;aACzD,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IAED,4CAAa,GAAb,UAAc,QAAQ,EAAE,IAAI,EAAE,KAAK;QACjC,IAAM,OAAO,GAAG,EAAC,QAAQ,YAAE,IAAI,QAAE,KAAK,SAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE;YAC3D,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YAC7B,WAAW,EAAE,SAAS;YACtB,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC,CAAC;IACL,CAAC;IACH,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC/DD;AAAA;IAAA;IAMA,CAAC;IALC,gDAAmB,GAAnB,UAAoB,QAAQ,EAAE,QAAQ,EAAE,QAAQ;QAC9C,MAAM,CAAC,KAAK,CAAC,8DAA8D,GAAG,QAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,UAAU;cACvH,QAAQ,GAAG,QAAQ,CAAC;aACrB,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IACH,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA;IAAA;IAqEA,CAAC;IAnEC,wCAAY,GAAZ,UAAa,MAAM;QACjB,MAAM,CAAC,KAAK,CAAC,0DAA0D,GAAG,MAAM,CAAC;aAC9E,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IAED,iCAAK,GAAL,UAAM,QAAQ,EAAE,QAAQ;QACtB,IAAM,WAAW,GAAG;YAClB,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,MAAM,CAAC,KAAK,CAAC,0DAA0D,EAAE;YACvE,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YACjC,WAAW,EAAE,SAAS;YACtB,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN;QACE,MAAM,CAAC,KAAK,CAAC,2DAA2D,EAAE;YACxE,MAAM,EAAE,MAAM;YACd,WAAW,EAAE,SAAS;SACvB,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN,UAAO,IAAI;QACT,MAAM,CAAC,KAAK,CAAC,4DAA4D,EAAE;YACzE,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAC1B,WAAW,EAAE,SAAS;YACtB,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN;QACE,MAAM,CAAC,KAAK,CAAC,4DAA4D,EAAE;YACzE,MAAM,EAAE,QAAQ;YAChB,WAAW,EAAE,SAAS;SACvB,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP;QACE,MAAM,CAAC,KAAK,CAAC,4DAA4D,EACvE;YACE,WAAW,EAAE,SAAS;SACvB,CAAC;aACD,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IAED,sCAAU,GAAV,UAAW,QAAQ,EAAE,QAAQ;QAC3B,IAAM,IAAI,GAAG;YACX,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,MAAM,CAAC,KAAK,CAAC,6DAA6D,EAAE;YAC1E,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAC1B,WAAW,EAAE,SAAS;YACtB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACrED;AAAA;IAAA;IAKA,CAAC;IAJC,iDAAmB,GAAnB,UAAoB,OAAO;QACzB,MAAM,CAAC,KAAK,CAAC,6DAA6D,GAAG,OAAO,GAAG,SAAS,CAAC;aAC9F,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC,CAAC;IACvC,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;ACLD,gCAAgC,4BAA4B,wBAAwB,KAAK,sBAAsB,mBAAmB,KAAK,S;;;;;;;;;;;ACAvI,oKAAoK,8BAA8B,kCAAkC,UAAU,UAAU,UAAU,UAAU,UAAU,SAAS,UAAU,aAAa,aAAa,oE;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjR;AACH;AACqB;AAOpE;IAEE,4BAAoB,OAA2B,EAC3B,KAAqB;QADzC,iBAIC;QAJmB,YAAO,GAAP,OAAO,CAAoB;QAC3B,UAAK,GAAL,KAAK,CAAgB;QASzC,WAAM,GAAG,EAAE,CAAC;QARV,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACzB,gBAAM,IAAI,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACtC,CAAC;IAQD,sCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChE,CAAC;IACH,CAAC;IAED,wCAAW,GAAX,UAAY,QAAQ,EAAE,QAAQ,EAAE,QAAQ;QAAxC,iBAOC;QANC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC;aAC3D,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAlCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAG6B,iFAAkB;YACpB,8DAAc;OAH9B,kBAAkB,CAoC9B;IAAD,yBAAC;CAAA;AApC8B;;;;;;;;;;;;ACT/B,+BAA+B,mBAAmB,KAAK,K;;;;;;;;;;;ACAvD,8RAA8R,aAAa,2CAA2C,aAAa,2CAA2C,aAAa,+CAA+C,aAAa,kDAAkD,aAAa,kDAAkD,aAAa,uKAAuK,aAAa,KAAK,aAAa,4TAA4T,MAAM,8KAA8K,MAAM,oMAAoM,aAAa,sJAAsJ,YAAY,gK;;;;;;;;;;;;;;;;;;;;;;;;;;ACAllD;AACH;AACuB;AAOtE;IAEE,6BAAoB,OAA4B,EAC5B,KAAqB;QADzC,iBAGC;QAHmB,YAAO,GAAP,OAAO,CAAqB;QAC5B,UAAK,GAAL,KAAK,CAAgB;QAKzC,YAAO,GAAG,EAAE,CAAC;QAJX,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAvB,CAAuB,CAAC,CAAC;IACjE,CAAC;IAID,wCAAU,GAAV,UAAW,MAAM;QACf,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IACD,yCAAW,GAAX,UAAY,OAAO;QAAnB,iBAGC;QAFC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC;aACtC,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;IAC7C,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IArBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAG6B,mFAAmB;YACrB,8DAAc;OAH9B,mBAAmB,CAuB/B;IAAD,0BAAC;CAAA;AAvB+B;;;;;;;;;;;;;;ACThC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".active.wbdv {\\r\\n  background-color: red;\\r\\n  border-color: red;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n#profile {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row container-fluid\\\">\\n  <div class=\\\"col-4\\\">\\n    <h1>Admin</h1>\\n    <a id=\\\"profile\\\" routerLink=\\\"/profile\\\">Profile</a>\\n    <a routerLink=\\\"/home\\\">Home</a>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Courses</li>\\n      <li *ngFor=\\\"let course of courses\\\"\\n          class=\\\"list-group-item wbdv\\\"\\n          [ngClass]=\\\"{'active': course.id == courseId}\\\">\\n        <a routerLink=\\\"/admin/course/{{course.id}}/section\\\">\\n          {{course.title}}\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"col-8\\\">\\n    <app-section-list></app-section-list>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courses = [];\n  courseId;\n\n  loadCourses() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.loadCourses();\n  }\n  ngOnInit() {\n  }\n\n}\n","import { Routes, RouterModule } from '@angular/router';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\r\nimport {AdminComponent} from './admin/admin.component';\r\nimport {SectionViewerComponent} from './section-viewer/section-viewer.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: HomePageComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'admin', component: AdminComponent},\r\n  { path: 'admin/course/:courseId/section', component: AdminComponent },\r\n  { path: 'course/:courseId/section', component: SectionViewerComponent },\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\r\n  { path: '**', component: HomePageComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport {routing} from './app-routing';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {CourseServiceClient} from './services/course.service.client';\nimport { RegisterComponent } from './register/register.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport {ModuleServiceClient} from './services/module.service.client';\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from './services/lesson.service.client';\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from './services/widget.service.client';\nimport { TopicTabsComponent } from './topic-tabs/topic-tabs.component';\nimport {TopicServiceClient} from './services/topic.service.client';\nimport { AdminComponent } from './admin/admin.component';\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {SectionServiceClient} from './services/section.service.client';\nimport { SectionViewerComponent } from './section-viewer/section-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    CourseGridComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    TopicTabsComponent,\n    AdminComponent,\n    SectionListComponent,\n    SectionViewerComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseServiceClient,\n    UserServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    TopicServiceClient,\n    WidgetServiceClient,\n    SectionServiceClient,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n#enroll {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\"","module.exports = \"<h2>Course Grid ({{courses.length}})</h2>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <a routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-primary\\\">View</a>\\n        <a routerLink=\\\"/course/{{course.id}}/section\\\"\\n           id=\\\"enroll\\\"\\n           class=\\\"btn btn-primary\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/coruse.model.client';\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient) { }\n\n  courses: Course[] = [];\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{course.title}}</h2>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/coruse.model.client';\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#login {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\n#register {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\n#user {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n  <h1>White Board</h1>\\n\\n  <a id=\\\"login\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-info\\\">Login</a>\\n  <a id=\\\"register\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-info\\\">Register</a>\\n  <a *ngIf=\\\"userId\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-info\\\">Profile</a>\\n  <!--<a routerLink=\\\"/quizzes\\\">Quizzes</a>-->\\n\\n  <hr *ngIf=\\\"userId\\\" class=\\\"my-4\\\">\\n  <h4 id=\\\"user\\\" *ngIf=\\\"userId\\\">Logged in as : {{user.username}}</h4>\\n  <hr *ngIf=\\\"userId\\\" class=\\\"my-4\\\">\\n\\n  <h3 *ngIf=\\\"userId\\\">Enrolled Courses ({{enrolledCourses.length}})</h3>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let course of enrolledCourses\\\" class=\\\"list-group-item\\\">\\n      <strong>{{course.title}}</strong>\\n      <a routerLink=\\\"/course/{{course.id}}\\\"\\n         class=\\\"btn btn-primary float-right\\\">View</a>\\n    </li>\\n  </ul>\\n  <hr class=\\\"my-4\\\">\\n\\n  <app-course-grid></app-course-grid>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/coruse.model.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor(private userService: UserServiceClient,\n              private courseService: CourseServiceClient,\n              private sectionService: SectionServiceClient,\n              private router: Router) { }\n\n  user = new User();\n  userId;\n  courses: Course[] = [];\n  enrolledCourses: Course[] = [];\n  sections = [];\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user => {\n        if (!user.err) {\n          this.user = user;\n          this.userId = user._id;\n          this.courseService.findAllCourses()\n            .then(courses => this.courses = courses)\n            .then(() => {\n              this.sectionService\n                .findSectionsForStudent(this.userId)\n                .then(sections => this.sections = sections)\n                .then(() => {\n                  for (let i = 0; i < this.sections.length; i++) {\n                    for (let j = 0; j < this.courses.length; j++) {\n                      if (this.sections[i].section.courseId === this.courses[j].id) {\n                        this.enrolledCourses.push(this.courses[j]);\n                      }\n                    }\n                  }\n                });\n            });\n        }\n      }).then(() => console.log(this.userId));\n  }\n\n}\n","module.exports = \".active.wbdv {\\r\\n  background-color: red;\\r\\n  border-color: red;\\r\\n}\\r\\n\\r\\n.active.wbdv {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link wbdv\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-topic-tabs></app-topic-tabs>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {LessonServiceClient} from '../services/lesson.service.client';\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    if (this.moduleId) {\n      this.loadLessons(this.courseId, this.moduleId);\n    }\n  }\n\n  loadLessons(courseId, moduleId) {\n    this.courseId = courseId;\n    this.moduleId = moduleId;\n    console.log(moduleId);\n    this.service.findLessonsForModule(courseId, moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n","module.exports = \"#register {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n\\n  <a id=\\\"register\\\" routerLink=\\\"/register\\\">Register</a>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    console.log([username, password]);\n    if (username && password) {\n      this.service\n        .login(username, password)\n        .then(response => {\n          return response.json();\n        })\n        .then((user) => {\n          if (!user.err) {\n            this.router.navigate(['profile']);\n          } else {\n            alert('User not exist or Password incorrect');\n          }\n        });\n    } else {\n      alert('Please enter valid Username and Password!');\n    }\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n\n}\n","export class Course {\r\n  id: number;\r\n  title: string;\r\n}\r\n","export class Section {\r\n  name: string;\r\n  seats: number;\r\n  courseId: string;\r\n}\r\n","export class User {\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phone: string;\r\n  email: string;\r\n  address: string;\r\n  sections: [string];\r\n}\r\n","module.exports = \".active.wbdv {\\r\\n  background-color: red;\\r\\n  border-color: red;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ModuleServiceClient} from '../services/module.service.client';\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"#logout {\\r\\n  margin-right: 5px;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n#home {\\r\\n  margin-right: 5px;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n#admin {\\r\\n  margin-right: 5px;\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n#delete {\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"user.username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"\\n         readonly/>\\n  <input [(ngModel)]=\\\"user.firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.phone\\\"\\n         placeholder=\\\"phone\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"user.address\\\"\\n         placeholder=\\\"address\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n\\n  <hr class=\\\"my-3\\\">\\n\\n  <h2>Enrolled Courses ({{enrolledCourses.length}})</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let course of enrolledCourses\\\" class=\\\"list-group-item\\\">\\n      <strong>{{course.title}}</strong>\\n      <a routerLink=\\\"/course/{{course.id}}\\\"\\n         class=\\\"btn btn-primary float-right\\\">View</a>\\n    </li>\\n  </ul>\\n  <hr class=\\\"my-3\\\">\\n\\n  <h2>Sections ({{sections.length}})</h2>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n     <span> {{enrollment.section.name}}\\n      ({{enrollment.section.seats}})\\n      | Grade: {{enrollment.grade}}</span>\\n      <button (click)=\\\"unEnroll(userId, enrollment.section._id)\\\"\\n              class=\\\"btn btn-outline-danger float-right\\\">Un-Enroll\\n      </button>\\n    </li>\\n  </ul>\\n\\n  <a id=\\\"logout\\\" class=\\\"btn btn-warning\\\" (click)=\\\"logout()\\\">Logout</a>\\n  <a id=\\\"home\\\" class=\\\"btn btn-primary\\\" routerLink=\\\"/home\\\">Home</a>\\n  <a id=\\\"admin\\\" *ngIf=\\\"user.username === 'admin' && user.password === 'admin'\\\"\\n     routerLink=\\\"/admin\\\"\\n     class=\\\"btn btn-dark\\\">Admin</a>\\n  <button id=\\\"delete\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-danger\\\">Delete Profile</button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\nimport {Course} from '../models/coruse.model.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router) { }\n\n  // user = {};\n  user = new User();\n  userId;\n  sections = [];\n  courses: Course[] = [];\n  enrolledCourses: Course[] = [];\n\n  update() {\n    console.log(this.user);\n    this.service\n      .update(this.user).then(() => alert('Update Successful!'));\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  delete() {\n    if (confirm('Do you really want to delete this user profile?')) {\n      this.service.delete()\n        .then(() => this.logout());\n    }\n  }\n\n  findEnrolledCourses() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses)\n      .then(() => {\n        this.sectionService\n          .findSectionsForStudent(this.userId)\n          .then(sections => this.sections = sections)\n          .then(() => {\n            this.enrolledCourses = new Array();\n            for (let i = 0; i < this.sections.length; i++) {\n              for (let j = 0; j < this.courses.length; j++) {\n                if (this.sections[i].section.courseId === this.courses[j].id) {\n                  this.enrolledCourses.push(this.courses[j]);\n                }\n              }\n            }\n            return this.enrolledCourses;\n          });\n      });\n  }\n\n  unEnroll(userId, sectionId) {\n    this.sectionService.unEnrollSection(userId, sectionId)\n      .then(() => this.sectionService.findSectionsForStudent(userId))\n      .then(sections => this.sections = sections)\n      .then(() => this.findEnrolledCourses());\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n        if (user.err) {\n          alert('You have not logged in!');\n        } else {\n          this.user = user;\n          this.userId = user._id;\n          this.courseService.findAllCourses()\n            .then(courses => this.courses = courses)\n            .then(() => {\n              this.sectionService\n                .findSectionsForStudent(this.userId)\n                .then(sections => this.sections = sections)\n                .then(() => {\n                  for (let i = 0; i < this.sections.length; i++) {\n                    for (let j = 0; j < this.courses.length; j++) {\n                      if (this.sections[i].section.courseId === this.courses[j].id) {\n                        this.enrolledCourses.push(this.courses[j]);\n                      }\n                    }\n                  }\n                });\n            })\n            .then(() => {\n            console.log(this.sections);\n            console.log(this.courses);\n            console.log(this.userId);\n          });\n        }\n      });\n      // .then(() => { if (this.userId) {\n      // this.sectionService\n      // .findSectionsForStudent(this.userId)\n      // .then(sections => this.sections = sections ); }\n      // });\n    //   .then(() => {\n    //     this.courseService.findAllCourses()\n    //       .then(courses => this.courses = courses);\n    //   })\n    //   .then(() => {\n    //     for (let i = 0; i < this.sections.length; i++) {\n    //       for (let j = 0; j < this.courses.length; j++) {\n    //         if (this.sections[i].section.courseId === this.courses[j].id) {\n    //           this.enrolledCourses.push(this.courses[j]);\n    //         }\n    //       }\n    //     }\n    //   }).then(() => {\n    //     console.log(this.sections);\n    //     console.log(this.courses);\n    //     console.log(this.userId);\n    // });\n\n  }\n\n\n}\n","module.exports = \"#login {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n  <a id=\\\"login\\\" routerLink=\\\"/login\\\">Login</a>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {UserServiceClient} from '../services/user.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  register(username, password, password2) {\n    if (username && password) {\n      if (password !== password2) {\n        alert('Passwords Do Not Match!');\n      } else {\n        this.service\n          .createUser(username, password)\n          .then(response => {\n            return response.json();\n          })\n          .then((user) => {\n            if (!user.err) {\n              this.router.navigate(['profile']);\n            } else {\n              alert('Username already exist, can not register');\n            }\n          });\n      }\n    } else {\n      alert('Please enter username and password!');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#update {\\r\\n  margin-right: 5px;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n#secondInput {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n#addBtn {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Section List</h1>\\n  <input [(ngModel)]=\\\"section.name\\\"\\n         placeholder=\\\"Section Name\\\"\\n         class=\\\"form-control\\\">\\n  <input [(ngModel)]=\\\"section.seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n  <button (click)=\\\"createSection(section.name, section.seats)\\\" class=\\\"btn btn-success btn-block\\\" id=\\\"addBtn\\\">\\n    Add Section\\n  </button>\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} Seats: {{section.seats}}\\n      <button (click)=\\\"delete(section)\\\"\\n              class=\\\"btn btn-danger float-right\\\">Delete</button>\\n      <button (click)=\\\"update(section)\\\" id=\\\"update\\\"\\n              class=\\\"btn btn-warning float-right\\\">Update</button>\\n      <div>\\n        <input [(ngModel)]=\\\"section.name\\\" class=\\\"form-control\\\" placeholder=\\\"update section name\\\">\\n        <input [(ngModel)]=\\\"section.seats\\\" class=\\\"form-control\\\" placeholder=\\\"update section seats\\\" id=\\\"secondInput\\\">\\n      </div>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Section} from '../models/section.model.client';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => {this.loadSections(params['courseId']);\n    this.courseService.findCourseById(params['courseId'])\n      .then(course => this.course = course);\n    });\n  }\n\n  section: Section = new Section();\n  sections = [];\n  course;\n\n  loadSections(courseId) {\n    this.section.courseId = courseId;\n    if (this.section.courseId) {\n      this.service\n        .findSectionsForCourse(courseId)\n        .then(sections => this.sections = sections);\n    }\n  }\n\n  createSection(sectionName, seats) {\n    if (!this.section.courseId) {\n      alert('Please select a course before create section');\n    } else {\n        if (this.section.seats) {\n          if (!this.section.name) {\n            this.service\n              .createSection(this.section.courseId, this.course.title + ' Section ' + this.sections.length + 1, seats)\n              .then(() => {\n                this.loadSections(this.section.courseId);\n              });\n          } else {\n            this.service\n              .createSection(this.section.courseId, sectionName, seats)\n              .then(() => {\n                this.loadSections(this.section.courseId);\n              });\n          }\n        } else {\n          alert('Please enter valid section name and seats');\n        }\n    }\n  }\n\n  delete(section) {\n    this.service\n      .deleteSection(section._id)\n      .then(() => this.loadSections(this.section.courseId));\n  }\n\n  update(section) {\n    this.service\n      .updateSection(section)\n      .then(() => this.loadSections(this.section.courseId))\n      .then(() => alert('Update Successful !'));\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Sections for {{course.title}}</h1>\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} Seats: {{section.seats}}\\n      <button (click)=\\\"enroll(userId, section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SectionServiceClient} from '../services/section.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Section} from '../models/section.model.client';\nimport {User} from '../models/user.model.client';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-section-viewer',\n  templateUrl: './section-viewer.component.html',\n  styleUrls: ['./section-viewer.component.css']\n})\nexport class SectionViewerComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private userService: UserServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => {this.loadSections(params['courseId']);\n      this.courseService.findCourseById(params['courseId'])\n        .then(course => this.course = course);\n    });\n  }\n\n  section: Section = new Section();\n  sections = [];\n  user = new User();\n  userId;\n  course;\n\n  loadSections(courseId) {\n    this.section.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n  findDuplicateSections(section, sections) {\n    for (let i = 0; i < sections.length; i++) {\n      // if (sections[i].section._id === section._id) {\n      //   return true;\n      // }\n      if (sections[i].section.courseId === this.course.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  enroll(userId, section) {\n    if (section.seats === 0) {\n      alert('No available seat for this section!');\n    } else {\n      let enrolledSections;\n      this.service.findSectionsForStudent(this.userId)\n        .then(sections => enrolledSections = sections)\n        .then(() => {\n          if (this.findDuplicateSections(section, enrolledSections)) {\n          alert('Student already enrolled in this Section, can not enroll again!');\n          } else {\n            this.service\n              .enrollStudentInSection(userId, section._id)\n              .then((response) => {\n                return response.json();\n              })\n              .then(response => {\n                if (response.err) {\n                  alert('Please log in before enroll!');\n                } else {\n                  this.router.navigate(['profile']);\n                }\n              });\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.userService\n      .profile()\n      .then(user => {\n        this.user = user;\n        this.userId = user._id;\n      });\n  }\n\n}\n","export class CourseServiceClient {\r\n  COURSE_URL = 'https://webdev-summerfull-2018-xma.herokuapp.com/api/course';\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_URL)\r\n      .then(response => response.json());\r\n  }\r\n  findCourseById(courseId) {\r\n    return fetch(this.COURSE_URL + '/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class LessonServiceClient {\r\n  findLessonsForModule(courseId, moduleId) {\r\n    return fetch('https://webdev-summerfull-2018-xma.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class ModuleServiceClient {\r\n  MODULE_URL = 'https://webdev-summerfull-2018-xma.herokuapp.com/api/course/COURSE_ID/module';\r\n  findModulesForCourse(courseId) {\r\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class SectionServiceClient {\r\n\r\n  // SECTION_URL = 'http://localhost:4000/api/course/COURSEID/section';\r\n  SECTION_URL = 'https://whiteboard-nodejs-server.herokuapp.com/api/course/COURSEID/section';\r\n\r\n  findSectionsForStudent(userId) {\r\n    const url = 'https://whiteboard-nodejs-server.herokuapp.com/api/student/' + userId + '/section';\r\n    return fetch(url, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  enrollStudentInSection(userId, sectionId) {\r\n    const url = 'https://whiteboard-nodejs-server.herokuapp.com/api/student/' + userId + '/section/' + sectionId;\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  deleteSection(sectionId) {\r\n    const url = 'https://whiteboard-nodejs-server.herokuapp.com/api/section/' + sectionId;\r\n    return fetch(url, {\r\n      method: 'delete'\r\n    });\r\n  }\r\n\r\n  updateSection(section) {\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/section/' + section._id, {\r\n      method: 'put',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  unEnrollSection(userId, sectionId) {\r\n    const url = 'https://whiteboard-nodejs-server.herokuapp.com/api/student/' + userId + '/section/' + sectionId;\r\n    return fetch(url, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n    });\r\n  }\r\n\r\n  findSectionsForCourse(courseId) {\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createSection(courseId, name, seats) {\r\n    const section = {courseId, name, seats};\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\r\n      method: 'post',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class TopicServiceClient {\r\n  findTopicsForLesson(courseId, moduleId, lessonId) {\r\n    return fetch('https://webdev-summerfull-2018-xma.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson/'\r\n      + lessonId + '/topic')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  findUserById(userId) {\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  update(user) {\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/profile', {\r\n      method: 'put',\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/profile', {\r\n      method: 'delete',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('https://whiteboard-nodejs-server.herokuapp.com/api/register', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class WidgetServiceClient {\r\n  findWidgetsForTopic(topicId) {\r\n    return fetch('https://webdev-summerfull-2018-xma.herokuapp.com/api/topic/' + topicId + '/widget')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \".active.wbdv {\\r\\n  background-color: red;\\r\\n  border-color: red;\\r\\n}\\r\\n\\r\\n.active.wbdv {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let topic of topics\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link wbdv\\\"\\n       [ngClass]=\\\"{'active': topic.id == topicId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n      {{topic.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {TopicServiceClient} from '../services/topic.service.client';\n\n@Component({\n  selector: 'app-topic-tabs',\n  templateUrl: './topic-tabs.component.html',\n  styleUrls: ['./topic-tabs.component.css']\n})\nexport class TopicTabsComponent implements OnInit {\n\n  constructor(private service: TopicServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  topicId;\n  topics = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.topicId = params['topicId'];\n    if (this.lessonId) {\n      this.loadLessons(this.courseId, this.moduleId, this.lessonId);\n    }\n  }\n\n  loadLessons(courseId, moduleId, lessonId) {\n    this.courseId = courseId;\n    this.moduleId = moduleId;\n    this.lessonId = lessonId;\n    console.log(lessonId);\n    this.service.findTopicsForLesson(courseId, moduleId, lessonId)\n      .then(topics => this.topics = topics);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#widgetList {\\r\\n  margin: 20px;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"widgetList\\\" *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n\\n    <div class=\\\"jumbotron\\\" *ngSwitchCase=\\\"'Heading'\\\">\\n      <h3>Heading Widget</h3>\\n      <div [ngSwitch]=\\\"widget.size\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n        <!--<h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>-->\\n        <!--<h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>-->\\n        <!--<h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>-->\\n      </div>\\n      <hr class=\\\"my-4\\\">\\n    </div>\\n\\n    <div class=\\\"jumbotron\\\" *ngSwitchCase=\\\"'Link'\\\">\\n      <h3>Link Widget</h3>\\n      <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n      <hr class=\\\"my-4\\\">\\n    </div>\\n\\n    <div class=\\\"jumbotron\\\" *ngSwitchCase=\\\"'List'\\\">\\n      <h3>ListWidget</h3>\\n      <div [ngSwitch]=\\\"widget.listType\\\">\\n        <ul *ngSwitchCase=\\\"'Unordered'\\\">\\n          <li\\n              *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n            {{item}}\\n          </li>\\n        </ul>\\n        <ol *ngSwitchCase=\\\"'Ordered'\\\">\\n          <li\\n              *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n            {{item}}\\n          </li>\\n        </ol>\\n\\n      </div>\\n      <hr class=\\\"my-4\\\">\\n    </div>\\n\\n    <div class=\\\"jumbotron\\\" *ngSwitchCase=\\\"'Paragraph'\\\">\\n      <h3>Paragraph Widget</h3>\\n      <p>{{widget.text}}</p>\\n      <hr class=\\\"my-4\\\">\\n    </div>\\n\\n    <div class=\\\"jumbotron\\\" *ngSwitchCase=\\\"'Image'\\\">\\n      <h3>Image Widget</h3>\\n      <img src={{widget.src}}>\\n      <hr class=\\\"my-4\\\">\\n    </div>\\n\\n    <!--<div *ngSwitchCase=\\\"'Exam'\\\">-->\\n      <!--<h1>Exam Widget</h1>-->\\n    <!--</div>-->\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WidgetServiceClient} from '../services/widget.service.client';\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n  setContext(params) {\n    this.context = params;\n    if (params.topicId) {\n      this.loadWidgets(params.topicId);\n    }\n  }\n  loadWidgets(topicId) {\n    this.service.findWidgetsForTopic(topicId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}